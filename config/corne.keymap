/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#include "keypos_36keys.h"
#include "settings.dtsi"

#define HM_TAPPING_TERM 300
#define HM_TAPPING_TERM_FAST 200
#define HM_PRIOR_IDLE 150

#define BASE 0
#define NUMS 1
#define MISC 2
#define SYMS 3

/ {
    chosen {
      zmk,matrix_transform = &five_column_transform;
    };

    behaviors {
        mm_gresc: grave_escape {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp ESC>, <&kp GRAVE>;
            mods = <(MOD_LSFT|MOD_LCTL)>;
        };

        mm_tab_tilde: tab_tilde {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp TAB>, <&kp TILDE>;
            mods = <(MOD_LSFT|MOD_LCTL)>;
        };

        mm_tab_layer: modmorph_tab_layer {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&lt NUMS TAB>, <&kp CAPS>;
            mods = <(MOD_RCTL|MOD_RSFT)>;
        };

        mm_bspc_del_layer: modmorph_bspc_del_layer {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&lt NUMS BSPC>, <&kp DEL>;
            mods = <(MOD_RCTL|MOD_RSFT)>;
        };

        mm_spc_unds_layer: modmorph_space_underscore_layer {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&lt MISC SPACE>, <&kp MINUS>;
            mods = <(MOD_RCTL|MOD_RSFT)>;
            keep-mods = <(MOD_LSFT)>;
        };

        mm_rspc_unds_layer: modmorph_rspace_underscore_layer {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&lt SYMS SPACE>, <&kp MINUS>;
            mods = <(MOD_LCTL|MOD_LSFT)>;
            keep-mods = <(MOD_RSFT)>;
        };

        mm_enter_return: modmorph_enter_return_layer {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&lt SYMS RET>, <&kp RET2>;
            mods = <(MOD_LSFT|MOD_LCTL)>;
        };

        hm_l: homerow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>,  <&kp>;

            flavor = "balanced";
            tapping-term-ms = <HM_TAPPING_TERM>;
            quick-tap-ms = <175>;                // repeat on tap-into-hold
            require-prior-idle-ms = <HM_PRIOR_IDLE>;

            hold-trigger-key-positions = <KEYS_R KEYS_T>;
            hold-trigger-on-release;
        };

        hm_r: homerow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            flavor = "balanced";
            tapping-term-ms = <HM_TAPPING_TERM>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <HM_PRIOR_IDLE>;

            hold-trigger-key-positions = <KEYS_L KEYS_T>;
            hold-trigger-on-release;
        };

        hm_shift_l: hm_shift_l {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            flavor = "balanced";
            tapping-term-ms = <HM_TAPPING_TERM_FAST>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <HM_PRIOR_IDLE>;

            hold-trigger-key-positions = <KEYS_R KEYS_T>;
        };

        hm_shift_r: hm_shift_r {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            flavor = "balanced";
            tapping-term-ms = <HM_TAPPING_TERM_FAST>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <HM_PRIOR_IDLE>;

            hold-trigger-key-positions = <KEYS_L KEYS_T>;
            // hold-trigger-on-release;
        };
    };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        display-name = "BASE";
                        bindings = <
  // ╭─────────────────────┬─────────────────────┬─────────────────────┬─────────────────────┬─────────────────────╮   ╭─────────────────────┬─────────────────────┬─────────────────────┬─────────────────────┬─────────────────────╮
       &kp Q                 &kp W                 &kp E                 &kp R                 &kp T                     &kp Y                 &kp U                 &kp I                 &kp O                 &kp P
  // ├─────────────────────┼─────────────────────┼─────────────────────┼─────────────────────┼─────────────────────┤   ├─────────────────────┼─────────────────────┼─────────────────────┼─────────────────────┼─────────────────────┤
       &hm_l LGUI A          &hm_l LALT S          &hm_shift_l LSHIFT D  &hm_l LCTRL F         &kp G                     &kp H                 &hm_r LCTRL J         &hm_shift_r LSHIFT K  &hm_r LALT L          &hm_r RGUI SEMI
  // ├─────────────────────┼─────────────────────┼─────────────────────┼─────────────────────┼─────────────────────┤   ├─────────────────────┼─────────────────────┼─────────────────────┼─────────────────────┼─────────────────────┤
       &kp Z                 &kp X                 &kp C                 &kp V                 &kp B                     &kp N                 &kp M                 &kp COMMA             &kp PERIOD            &kp DOT
  // ├─────────────────────┼─────────────────────┼─────────────────────┼─────────────────────┼─────────────────────┤   ├─────────────────────┼─────────────────────┼─────────────────────┼─────────────────────┼─────────────────────┤
                                                   &mm_tab_tilde         &mm_spc_unds_layer    &mm_bspc_del_layer        &mm_enter_return      &mm_rspc_unds_layer   &mm_gresc
  //                                             ╰─────────────────────┴─────────────────────┴─────────────────────╯   ╰─────────────────────┴─────────────────────┴─────────────────────╯
                        >;
                };

                numpad_layer {
                        display-name = "NUMS";
                        bindings = <
  // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
       &trans        &trans        &trans        &trans        &trans            &trans        &kp N7        &kp N8        &kp N9        &kp N0
  // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
       &trans        &trans        &trans        &trans        &trans            &trans        &kp N4        &kp N5        &kp N6        &kp SQT
  // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
       &trans        &trans        &trans        &trans        &trans            &trans        &kp N1        &kp N2        &kp N3        &trans
  // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
                                   &trans        &trans        &trans            &trans        &trans        &trans
  //                             ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
                        >;
                };

                misc_layer {
                        display-name = "MISC";
                        bindings = <

  // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
       &trans        &trans        &trans        &trans        &trans            &trans        &trans        &kp UP        &trans        &trans
  // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
       &trans        &trans        &trans        &trans        &trans            &trans        &kp LEFT      &kp DOWN      &kp RIGHT     &trans
  // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
       &trans        &trans        &trans        &trans        &trans            &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
  // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
                                   &trans        &trans        &trans            &trans        &trans        &bt BT_CLR
  //                             ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
                        >;
                };

                symbol_layer {
                        display-name = "SYMS";
                        bindings = <
  // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
       &trans        &trans        &kp LBKT      &kp RBKT      &trans            &trans        &trans        &trans        &trans        &trans
  // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
       &trans        &kp COLON     &kp LBRC      &kp RBRC      &trans            &trans        &trans        &trans        &trans        &trans
  // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
       &trans        &trans        &kp KP_LPAR   &kp KP_RPAR   &trans            &trans        &trans        &trans        &trans        &trans
  // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
                                   &trans        &trans        &trans            &trans        &trans        &trans
  //                             ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
                        >;
                };
        };
};

// vim: set syntax=dts:
